pipeline {
    agent any
 
    environment {
        registryCredentialUp = 'docker_up'
        
        registry_react_app = 'clickerp/react-app'
        dockerfile_react_app = 'Dockerfile'
        dockerImage_react_app = ''
        CLIENT_NAME = 'AG'
    }

    stages {
        stage('Start') {
            steps {
                echo 'Pipeline start.'
            }
        }
        
        stage('Write env file') {
            steps {
                script {
                   //add file
                   
                   def data = "VITE_APP_CLIENT_NAME=${CLIENT_NAME}"
                   writeFile(file: '.env', text: data)
               }
            }
        }
        stage('read') {
           steps {
               script {
                   def data = readFile(file: '.env')
                   println(data)
               }
           }
       }
       
        stage('npm install') { 
            steps {
                sh 'npm install' 
            }
        }
    
        stage('Building image') {
            steps{
                script {
                    sh "ls"
                     dockerImage_react_app = docker.build(registry_react_app + ":$BUILD_NUMBER", "-f ${dockerfile_react_app} .")
                }
            }
        }
    
        stage('Push to dockerhub') {
            steps{
                script {
                    docker.withRegistry( '', registryCredentialUp ) {
                        dockerImage_react_app.push()
                    }   
                }
            }
        }

        stage('Cleaning up') {
            steps{
                sh "docker rmi $registry_react_app:$BUILD_NUMBER"
            }
        }

        stage('Tigger CD Pipeline new') {
            steps{
                script {
                    def imageTag = env.BUILD_NUMBER
                    sh """
                            curl -X POST "http://localhost:8080/job/react-app-cd-pipeline/buildWithParameters?token=jenkins" \
                                 --data-urlencode "IMAGE_TAG=${imageTag}" \
                                 --user jenkins:115f5bd75ec12670df2ae2068c8f3db59f
                        """
                }
            }
        }
    }
 
    post {
        success {
            echo 'Pipeline succeeded!'
        }
        failure {
            echo "Job failed! Triggering email notification job..."
            
            // Trigger the email job with parameters
            build job: 'email', 
                wait: false, 
                parameters: [
                    string(name: 'BUILD_URL', value: env.BUILD_URL),
                    string(name: 'JOB_NAME', value: env.JOB_NAME),
                    string(name: 'BUILD_NUMBER', value: env.BUILD_NUMBER)
                ]
        }
    }
}
